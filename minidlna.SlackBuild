#!/bin/sh
# Slackware build script for minidlna
# Copyright (C) 2017 Georgi D. Sotirov <gdsotirov@dir.bg>
# Based on the original build script for the client by Patick Volkerding
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
# 
# Visit SlackPack at http://sotirov-bg.net/slackpack/
#
# $Id: minidlna.SlackBuild,v 1.2 2017/04/22 12:40:34 gsotirov Exp $
#

. ../../slack-package.conf

NAME=minidlna
VERSION=1.0.25
ARCH=${ARCH:-i486}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

SRC=$TMP/${NAME}-${VERSION}
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-${NAME}
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir -p $PKG

# Extract and fix source
cd $TMP
tar -xvf $CWD/${NAME}_${VERSION}_src.tar.?z* || exit 3
cd $SRC
fix_source

# Apply patches
if [ -e $CWD/${NAME}-${VERSION}.diff ]; then
  patch -p1 -b -z.orig < $CWD/${NAME}-${VERSION}.diff || exit 4
fi

# Configure
# Build & install
CFLAGS="$SLKCFLAGS" \
make -j4 || exit 6
make DESTDIR=$PKG install || exit 7
make DESTDIR=$PKG install-conf || exit 8

# Additional installation steps
(cd $PKG/etc; mv ${NAME}.conf ${NAME}.conf.new )
install -m 755 -d $PKG/etc/rc.d
install -m 644 $CWD/rc.${NAME} $PKG/etc/rc.d/rc.${NAME}.new

# Prepare
sbin_perms $PKG
( cd $PKG; strip_bin )
DOCFILES="${DOCFILES} LICENCE*"
create_docs $PKG ${NAME}-${VERSION}
( cd $PKG/usr/doc/${NAME}-${VERSION}; mv LICENCE COPYING )

mkdir -p $PKG/install
install -m 644 $CWD/doinst.sh       $PKG/install/doinst.sh
install -m 644 $CWD/slack-desc      $PKG/install/slack-desc
install -m 644 $CWD/slack-required  $PKG/install/slack-required

SBDIR=$PKG/usr/src/slackbuilds/${NAME}-${VERSION}
mkdir -p $PKG/usr/src/slackbuilds/${NAME}-${VERSION}
install -m 644 $CWD/doinst.sh                 $SBDIR/doinst.sh
install -m 644 $CWD/slack-desc                $SBDIR/slack-desc
install -m 644 $CWD/slack-required            $SBDIR/slack-required
if [ -e $CWD/${NAME}-${VERSION}.diff ]; then
  install -m 644 $CWD/${NAME}-${VERSION}.diff $SBDIR/${NAME}-${VERSION}.diff
fi
install -m 644 $CWD/${NAME}.SlackBuild        $SBDIR/${NAME}.SlackBuild

# Create package
cd $PKG
PKGNAME=${NAME}-${VERSION}-${ARCH}-${BUILD}${MYIN}
makepkg -l y -c n $PKG_DIR/${PKGNAME}.txz
cd $PKG_DIR
md5sum ${PKGNAME}.txz > ${PKGNAME}.txz.md5
cat $PKG/install/slack-desc > $PKG_DIR/${PKGNAME}.txt

# Clean up (optionally)
if [ "$1" == "--cleanup" ]; then
   rm -r $SRC
   rm -r $PKG
fi

